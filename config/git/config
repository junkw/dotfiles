[user]
	name = Jumpei KAWAMI
	email = don.t.be.trapped.by.dogma@gmail.com

[core]
	commitGraph = true
	quotepath = false
	whitespace = trailing-space

[color]
	ui = auto

[credential]
	helper = osxkeychain

[gc]
	writeCommitGraph = true

[help]
	autocorrect = 1

[protocol]
	version = 2


[pull]
	rebase = false
	ff = only

[push]
	default = simple
	followTags = true

[rebase]
	autostash = true

[rerere]
	enabled = true


[pager]
	log = diff-highlight | less
	show = diff-highlight | less
	diff = diff-highlight | less

[pretty]
	changelog-format = format:- %s  %n  %h @%an
	graph-format = format:%C(yellow)%h%Creset %C(auto)%d%Creset %s %C(blue)%an%Creset %C(green)%ar%Creset

[diff]
	colorMoved = true
	compactionHeuristic = true
	indentHeuristic = true
	tool = ediff
	guitool = ediff

[difftool "ediff"]
	cmd = ediff.sh $LOCAL $REMOTE $MERGED

[merge]
	tool = ediff

[mergetool "ediff"]
	cmd = ediff.sh $LOCAL $REMOTE $MERGED $BASE
	trustExitCode = true


[magit]
	hideCampaign = true

[svn]
	pushmergeinfo = true


[alias]
	branches = branch -a
	cached = diff --cached
	changelog = log --pretty=changelog-format --no-merges --cherry --abbrev-commit --date-order
	cleanup = !git gc --aggressive; git fsck --full
	conflicts = diff --name-only --diff-filter=U
	deep-cleanup = !git repack -a -f --depth=250 --window=250; git prune; git fsck --full
	discard = restore --
	fetch-all = fetch --all --prune --tags
	fetch-upstream = fetch --prune --tags upstream
	fixup = "!f() { TARGET=$(git rev-parse "$1"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"
	graph = log --graph --remotes --branches --tags --decorate --pretty=graph-format
	lfs-checkout = !git checkout && git lfs pull
	lfs-pull = !git pull && git lfs pull
	pull-all = !git fetch-all && git pull origin master
	pull-upstream = !git fetch-upstream && git merge upstream/master
	push-all = push --tags origin
	refuge = stash save --include-untracked
	remotes = remote -v
	show-parent-branch = !git show-branch | grep '*' | grep -v "$(git rev-parse --abbrev-ref HEAD)" | head -1 | awk -F'[]~^[]' '{print $2}'
	staged = cached
	stashes = stash list
	tags = tag
	uncommit = reset --mixed HEAD~1
	update = !git pull-all
	update-submodule = submodule update --init --recursive
	update-all = !git pull-all; git update-submodule
	unstage = reset HEAD --
	ver-contains = tag --contains


[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge --skip %f
	required = true
	process = git-lfs filter-process


[url "git@github.com:"]
	insteadOf = gh:


[includeIf "gitdir:~/Code/worksite/"]
	path = ~/.config/git/config-worksite
